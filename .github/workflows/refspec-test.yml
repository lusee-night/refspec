name: refspec-test
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, pybind11 ]
  pull_request:
    branches: [ main, pybind11 ]

  # Enable manual activation, too
  workflow_dispatch:
jobs:
  refcpec-build:
    runs-on: ubuntu-latest
    container: buddhasystem/lusee-night-refspec-foundation:0.1 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # -mxp- Check later why this doesn't work anymore: - run: ls ${{ github.workspace }}
      # -mxp- pull pybind11
      - run: git submodule update --init
      - run: python3.10 -m pip install pybind11
      #- run: ./fft.sh
      - run: ls -l /usr/local/lib      
      # Build local binaries:
      - run: make
      - run: pwd
      - run: ls -l
      - run: ./test/test_pfb.exe > ./pfb_test.dat
#      - run: ls -l /usr/local/lib/*fft*
      - run: mkdir -p /usr/lib/x86_64-linux-gnu/
      - run: cp /usr/local/lib/*fft* /usr/lib/x86_64-linux-gnu/
      - run: python3.10 -c 'import refspec'
      - run: ./scripts/pybind11_validator.py
      - run: ./scripts/simple_demo.py
      - name: 'pfb_test Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: pfb_test
          path: pfb_test.dat
          retention-days: 5
    # -mxp-   temporarily remove, until we come up with a better way to compare        
    #  - run: diff ./pfb_test.dat ./testdata/pfb_test.dat
#      - run: ./test/test_response.exe -c

      - name: 'response_test Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: response_test
          path: response_test.dat
          retention-days: 5

    # -mxp-   temporarily remove, until we come up with a better way to compare  
    #  - run: diff ./response_test.dat ./testdata/response_test.dat

      ###########################################################
      # -mxp-
      # Will decide later how to compare best, now stick with literal equivalency
      # We could do precision-based comparison, too like --
      #      - run: python3 -c "import numpy as np; a=np.loadtxt('pfb_test1.dat')[:,1]; b=np.loadtxt('data/pfb_test1.dat')[:,1]; assert(np.all(np.abs(a-b)/(0.5*(a+b))<1e-4))"

